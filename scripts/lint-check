#!/bin/bash
#
# Lint Check Script for AI Governance Framework
#
# This script validates the consistency and structure of risk and mitigation files
# in the governance framework. It performs the following checks:
#
# 1. Filename Convention Validation:
#    - Risk files: Must match pattern ^ri-.*\.md$ in docs/_risks/
#    - Mitigation files: Must match pattern ^mi-.*\.md$ in docs/_mitigations/
#
# 2. YAML Front Matter Validation:
#    - Checks that all files contain required YAML keys:
#      * layout: Template layout for the file
#      * type: Content type classification
#      * doc-status: Document status (draft, review, approved, etc.)
#      * title: Human-readable title
#      * sequence: Numerical sequence for ordering
#
# Exit Codes:
#   0 - All checks passed
#   1 - One or more validation failures found
#
# Usage:
#   ./scripts/lint-check
#
# Example output:
#   Missing keys for docs/_risks/ri-1.md:
#   - doc-status
#   Error: File name 'bad-name.md' does not match the convention. in docs/_risks
#   Lint check failed
#

SCRIPT_DIR=$(dirname "$0")

# Function to check a file name against a regex
check_filename_regex() {
  file_name="$1"
  regex="$2"

  if [[ "$file_name" =~ $regex ]]; then
    return 0 
  else
    return 1
  fi
}

# Function to process files in a folder
process_files() {
  folder_path="$1"
  regex="$2"

  if [ ! -d "$folder_path" ]; then
    echo "Error: $folder_path is not a valid directory."
    return 1
  fi

  # Use find to get all files in the directory
  find "$folder_path" -type f -print0 | while IFS= read -r -d $'\0' file_path; do
    file_name=$(basename "$file_path") # Extract filename from path
      yaml_block=$(sed -n '/^---$/,/^---$/ {
        /^---$/d      
        p
    }' "$file_path")


    required_keys=("layout" "type" "doc-status" "title" "sequence")
    missing_keys=()

    for key in "${required_keys[@]}"; do
        if ! echo "$yaml_block" | grep -qE "^${key}:"; then
            missing_keys+=("$key")
        fi
    done
    
    return_val=0
    if [ ${#missing_keys[@]} -gt 0 ]; then
        echo "Missing keys for $file_path:"
        for key in "${missing_keys[@]}"; do
            echo "- $key"
        done
        return_val=1
    fi
    
    if ! check_filename_regex "$file_name" "$regex"; then
      echo "Error: File name '$file_name' does not match the convention. in $folder_path"
      return_val=1
    fi
    if [ $return_val -eq 1 ];then
      return 1
    fi
  done
}




risk_folder="$SCRIPT_DIR/../docs/_risks" 
risk_filename_regex="^ri-.*\.md$"

mitigation_folder="$SCRIPT_DIR/../docs/_mitigations"
mitigation_filename_regex="^mi-.*\.md$" 

risk_check_success=0
mitigation_check_success=0

if process_files "$risk_folder" "$risk_filename_regex"; then
  risk_check_success=1
fi

if process_files "$mitigation_folder" "$mitigation_filename_regex"; then
  mitigation_check_success=1
fi

if [ $risk_check_success -eq 1 ] && [ $mitigation_check_success -eq 1 ]; then
  echo "Lint check successful"
else
  echo "Lint check failed"
  exit 1
fi